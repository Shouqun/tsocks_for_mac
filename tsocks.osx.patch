--- Makefile.in.orig	2007-03-28 12:26:27.000000000 +0100
+++ Makefile.in	2007-03-28 12:21:01.000000000 +0100
@@ -1,6 +1,7 @@
 # Makefile used by configure to create real Makefile
 
 CC=@CC@
+SHLIB_EXT=@SHLIB_EXT@
 prefix=@prefix@
 exec_prefix = @exec_prefix@
 libexecdir = @libexecdir@
@@ -24,12 +25,13 @@
 SCRIPT = tsocks
 SHLIB_MAJOR = 1
 SHLIB_MINOR = 8
-SHLIB = ${LIB_NAME}.so.${SHLIB_MAJOR}.${SHLIB_MINOR}
+SHLIB = ${LIB_NAME}.${SHLIB_EXT}.${SHLIB_MAJOR}.${SHLIB_MINOR}
 DEADPOOL_O = @DEADPOOL_O@
 
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 CFLAGS = @CFLAGS@
+LDFLAGS = @LDFLAGS@
 INCLUDES = -I.
 LIBS = @LIBS@
 SPECIALLIBS = @SPECIALLIBS@
@@ -49,11 +51,11 @@
 	${SHCC} ${CFLAGS} ${INCLUDES} -o ${INSPECT} ${INSPECT}.c ${COMMON}.o ${LIBS} 
 
 ${SAVE}: ${SAVE}.c
-	${SHCC} ${CFLAGS} ${INCLUDES} -static -o ${SAVE} ${SAVE}.c
+	${SHCC} ${CFLAGS} ${INCLUDES} -o ${SAVE} ${SAVE}.c
 
 ${SHLIB}: ${OBJS} ${COMMON}.o ${PARSER}.o ${DEADPOOL_O}
-	${SHCC} ${CFLAGS} ${INCLUDES} -nostdlib -shared -o ${SHLIB} ${OBJS} ${COMMON}.o ${PARSER}.o ${DEADPOOL_O} ${DYNLIB_FLAGS} ${SPECIALLIBS} ${LIBS}
-	ln -sf ${SHLIB} ${LIB_NAME}.so
+	${SHCC} ${CFLAGS} ${INCLUDES} ${LDFLAGS} -o ${SHLIB} ${OBJS} ${COMMON}.o ${PARSER}.o ${DEADPOOL_O}
+	ln -sf ${SHLIB} ${LIB_NAME}.${SHLIB_EXT}
 
 %.so: %.c
 	${SHCC} ${CFLAGS} ${INCLUDES} -c ${CC_SWITCHES} $< -o $@
@@ -69,8 +71,8 @@
 
 installlib:
 	${MKINSTALLDIRS} "${DESTDIR}${libdir}"
-	${INSTALL} ${SHLIB} ${DESTDIR}${libdir}/${LIB_NAME}.so.${SHLIB_MAJOR}
-	ln -sf ${LIB_NAME}.so.${SHLIB_MAJOR} ${DESTDIR}${libdir}/${LIB_NAME}.so
+	${INSTALL} ${SHLIB} ${DESTDIR}${libdir}/${LIB_NAME}.${SHLIB_EXT}.${SHLIB_MAJOR}
+	ln -sf ${LIB_NAME}.${SHLIB_EXT}.${SHLIB_MAJOR} ${DESTDIR}${libdir}/${LIB_NAME}.${SHLIB_EXT}
 
 installman:
 	${MKINSTALLDIRS} "${DESTDIR}${mandir}/man1"
@@ -81,7 +83,7 @@
 	${INSTALL_DATA} tsocks.conf.5 ${DESTDIR}${mandir}/man5/
 	
 clean:
-	-rm -f *.so *.so.* *.o *~ ${TARGETS}
+	-rm -f *.so *.so.* *.dylib *.dylib.* *.o *~ ${TARGETS}
 
 distclean: clean
 	-rm -f config.cache config.log config.h Makefile \
--- configure.in.orig	2007-03-28 12:26:34.000000000 +0100
+++ configure.in	2007-03-28 12:16:28.000000000 +0100
@@ -365,7 +365,7 @@
 dnl Find the correct poll prototype on this machine 
 AC_MSG_CHECKING(for correct poll prototype)
 PROTO=
-for testproto in 'struct pollfd *ufds, unsigned long nfds, int timeout' 
+for testproto in 'struct pollfd *ufds, nfds_t nfds, int timeout'
 do
   if test "${PROTO}" = ""; then
     AC_TRY_COMPILE([
@@ -393,8 +393,46 @@
 AC_DEFINE_UNQUOTED(GETIPNODEBYNAME_SIGNATURE, [${PROTO}])
 
 dnl Output the special librarys (libdl etc needed for tsocks)
-SPECIALLIBS=${LIBS}
+SPECIALLIBS="${LIBS} -lSystemStubs"
 AC_SUBST(SPECIALLIBS)
 LIBS=${SIMPLELIBS}
 
-AC_OUTPUT(Makefile)
+dnl Check if the linker accepts -dynamiclib; necessary on Mac OS X
+AC_MSG_CHECKING(if the linker accepts -dynamiclib)
+OLDLDFLAGS="$LDFLAGS"
+LDFLAGS="$LDFLAGS -dynamiclib"
+AC_TRY_COMPILE(,,AC_MSG_RESULT(yes),[
+   LDFLAGS="$OLDLDFLAGS"
+   AC_MSG_RESULT(no)])
+
+dnl Check if the linker accepts -multiply_defined suppress; necessary on Mac OS X
+AC_MSG_CHECKING(if the linker accepts -multiply_defined suppress)
+OLDLDFLAGS="$LDFLAGS"
+LDFLAGS="$LDFLAGS -multiply_defined suppress"
+AC_TRY_COMPILE(,,AC_MSG_RESULT(yes),[
+   LDFLAGS="$OLDLDFLAGS"
+   AC_MSG_RESULT(no)])
+
+dnl Check if the linker accepts -single_module; necessary on Mac OS X
+AC_MSG_CHECKING(if the linker accepts -single_module)
+OLDLDFLAGS="$LDFLAGS"
+SHLIB_EXT="so"
+LD_PRELOAD="LD_PRELOAD"
+LDFLAGS="$LDFLAGS -single_module"
+AC_TRY_COMPILE(,,
+   [
+      SHLIB_EXT="dylib" 
+      LD_PRELOAD="DYLD_INSERT_LIBRARIES"
+      AC_MSG_RESULT(yes)
+   ], [
+      LDFLAGS="$OLDLDFLAGS"
+      AC_MSG_RESULT(no)
+   ]
+)
+
+AC_SUBST(SHLIB_EXT)
+AC_SUBST(LD_PRELOAD)
+AC_CONFIG_FILES([Makefile])
+AC_CONFIG_FILES([tsocks], [chmod +x tsocks])
+AC_OUTPUT
+
--- dead_pool.c.orig	2007-03-28 12:43:06.000000000 +0100
+++ dead_pool.c	2007-03-28 12:43:21.000000000 +0100
@@ -68,7 +68,7 @@
     /* Allocate space for the dead_pool structure */
     newpool = (dead_pool *) mmap(0, sizeof(dead_pool), 
                    PROT_READ | PROT_WRITE, 
-                   MAP_SHARED | MAP_ANONYMOUS, -1, 0); 
+                   MAP_SHARED | MAP_ANON, -1, 0); 
     if(!newpool) {
         show_msg(MSGERR, "init_pool: unable to mmap deadpool "
                  "(tried to map %d bytes)\n", sizeof(dead_pool));
@@ -93,7 +93,7 @@
     /* Allocate space for the entries */
     newpool->entries = (pool_ent *) mmap(0, newpool->n_entries * sizeof(pool_ent), 
                             PROT_READ | PROT_WRITE, 
-                            MAP_SHARED | MAP_ANONYMOUS, -1, 0); 
+                            MAP_SHARED | MAP_ANON, -1, 0); 
     if(!newpool->entries) {
         munmap((void *)newpool, sizeof(dead_pool));
         show_msg(MSGERR, "init_pool: unable to mmap deadpool entries "
--- tsocks.c.orig	2007-03-28 12:26:49.000000000 +0100
+++ tsocks.c	2007-03-28 12:25:55.000000000 +0100
@@ -76,7 +76,7 @@
 static char *conffile = NULL;
 
 /* Exported Function Prototypes */
-void _init(void);
+void _init(void) __attribute__ ((constructor));
 int connect(CONNECT_SIGNATURE);
 int select(SELECT_SIGNATURE);
 int poll(POLL_SIGNATURE);
@@ -225,9 +225,10 @@
 	struct sockaddr_in *connaddr;
 	struct sockaddr_in peer_address;
 	struct sockaddr_in server_address;
-   int gotvalidserver = 0, rc, namelen = sizeof(peer_address);
+   int gotvalidserver = 0, rc;
 	int sock_type = -1;
-	int sock_type_len = sizeof(sock_type);
+	socklen_t sock_type_len = sizeof(sock_type);
+	socklen_t namelen = sizeof(peer_address);
 	unsigned int res = -1;
 	struct serverent *path;
    struct connreq *newconn;
@@ -699,7 +700,7 @@
              * come around again (since we can't flag it for read, we don't know
              * if there is any data to be read and can't be bothered checking) */
             if (conn->selectevents & WRITE) {
-               setevents |= POLLOUT; 
+               ufds[i].revents |= (conn->selectevents & WRITE);
                nevents++;
             }
          }
@@ -937,7 +938,12 @@
                     sizeof(conn->serveraddr));
 
    show_msg(MSGDEBUG, "Connect returned %d, errno is %d\n", rc, errno); 
-   if (rc) {
+   if (rc && errno == EISCONN) {
+      rc = 0;
+      show_msg(MSGDEBUG, "Socket %d already connected to SOCKS server\n",
+conn->sockid);
+      conn->state = CONNECTED;
+   } else if (rc) {
       if (errno != EINPROGRESS) {
          show_msg(MSGERR, "Error %d attempting to connect to SOCKS "
                   "server (%s)\n", errno, strerror(errno));
--- tsocks.h.orig	2007-03-28 12:26:58.000000000 +0100
+++ tsocks.h	2007-03-28 12:16:46.000000000 +0100
@@ -75,9 +75,9 @@
 #define FAILED 14 
    
 /* Flags to indicate what events a socket was select()ed for */
-#define READ (1<<0)
-#define WRITE (1<<1)
-#define EXCEPT (1<<2)
+#define READ (POLLIN|POLLRDNORM)
+#define WRITE (POLLOUT|POLLWRNORM|POLLWRBAND)
+#define EXCEPT (POLLRDBAND|POLLPRI)
 #define READWRITE (READ|WRITE)
 #define READWRITEEXCEPT (READ|WRITE|EXCEPT)
 
--- /dev/null	2006-01-28 19:21:26.000000000 -0800
+++ tsocks.in	2006-01-28 19:21:09.000000000 -0800
@@ -0,0 +1,114 @@
+#!/bin/sh
+# Wrapper script for use of the tsocks(8) transparent socksification library
+#
+# There are three forms of usage for this script:
+#
+# /usr/bin/tsocks program [program arguments...]
+#
+# This form sets the users @LD_PRELOAD@ environment variable so that tsocks(8) 
+# will be loaded to socksify the application then executes the specified 
+# program (with the provided arguments). The following simple example might 
+# be used to telnet to www.foo.org via a tsocks.conf(5) configured socks server:
+#
+# /usr/bin/tsocks telnet www.foo.org
+#
+# The second form allows for tsocks(8) to be switched on and off for a 
+# session (that is, it adds and removes tsocks from the @LD_PRELOAD@ environment
+# variable). This form must be _sourced_ into the user's existing session
+# (and will only work with bourne shell users):
+#
+# . /usr/bin/tsocks on
+# telnet www.foo.org 
+# . /usr/bin/tsocks off
+# 
+# Or
+# 
+# source /usr/bin/tsocks on
+# telnet www.foo.org
+# source /usr/bin/tsocks off
+#
+# The third form creates a new shell with @LD_PRELOAD@ set and is achieved
+# simply by running the script with no arguments 
+# 
+# /usr/bin/tsocks
+#
+# When finished the user can simply terminate the shell with 'exit'
+# 
+# This script is originally from the debian tsocks package by 
+# Tamas Szerb <toma@rulez.org>
+
+if [ $# = 0 ] ; then
+   echo "$0: insufficient arguments"
+   exit
+fi
+
+LIBDIR="@libdir@"
+LIB_NAME="libtsocks"
+SHLIB_EXT="@SHLIB_EXT@"
+SHLIB="${LIBDIR}/${LIB_NAME}.${SHLIB_EXT}"
+
+function show() {
+    echo "@LD_PRELOAD@         = \"$@LD_PRELOAD@\""
+    if [ "@LD_PRELOAD@" = "DYLD_INSERT_LIBRARIES" ] 
+        then
+            echo "DYLD_FORCE_FLAT_NAMESPACE     = \"$DYLD_FORCE_FLAT_NAMESPACE\""
+    fi
+}
+        
+case "$1" in
+	on)
+		if [ -z "$@LD_PRELOAD@" ]
+			then
+                echo "Setting @LD_PRELOAD@ ..."
+				export @LD_PRELOAD@="${SHLIB}"
+			else
+                echo "Appending to @LD_PRELOAD@ ..."
+				echo $@LD_PRELOAD@ | grep -q "${SHLIB}" || \
+				export @LD_PRELOAD@="${SHLIB} $@LD_PRELOAD@"
+		fi
+        if [ "@LD_PRELOAD@" = "DYLD_INSERT_LIBRARIES" ] 
+            then
+                # Required variable for Mac OS X
+                export DYLD_FORCE_FLAT_NAMESPACE=1
+        fi
+        show
+	;;
+	off)
+        echo "Removing ${SHLIB} from @LD_PRELOAD@ ..."
+		export @LD_PRELOAD@=`echo -n $@LD_PRELOAD@ | sed 's#@libdir@/libtsocks\.@SHLIB_EXT@ *##'`
+		if [ -z "$@LD_PRELOAD@" ]
+			then
+				unset @LD_PRELOAD@
+		fi
+        show
+	;;
+	show|sh)
+		show
+	;;
+	-h|-?)
+      echo "$0: Please see tsocks(1) or read comment at top of $0"
+   ;;
+	*)
+		if [ -z "$@LD_PRELOAD@" ]
+		then
+			export @LD_PRELOAD@="${SHLIB}"
+		else
+			echo $@LD_PRELOAD@ | grep -q "${SHLIB}" || \
+			export @LD_PRELOAD@="${SHLIB} $@LD_PRELOAD@"
+		fi
+
+        export DYLD_FORCE_FLAT_NAMESPACE=1
+
+		if [ $# = 0 ]
+		then
+			${SHELL:-/bin/sh}
+		fi
+
+		if [ $# -gt 0 ]
+		then
+			exec "$@"
+		fi
+	;;
+esac
+
+#EOF

